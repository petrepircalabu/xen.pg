There are prerequisites for building a XenServer source release. The build
environment we use is a CentOS-6.5 and we recommend to used the same. All the
following must be installed, either by visiting the project webpage or
installing a pre-built package provided by your OS distributor:

    * GCC
    * GNU Make
    * GNU Binutils
    * RPM build
    * Redhat rpm config (if debuginfo is required)
    * Git
    * guilt patch queue management
    * Development install of zlib (e.g., zlib-devel)
    * Development install of Python v2.3 or later (e.g., python-devel)
    * Development install of bzip2 (e.g.,bzip2-devel)
    * Development install of curses (e.g., ncurses-devel)
    * Development install of e2fsprogs (e.g., e2fsprogs-devel)
    * Development install of e4fsprogs (e.g., e4fsprogs-devel)
    * Development install of yajl (e.g. libyajl-dev)
    * 16-bit x86 assembler, loader and compiler (dev86 rpm or bin86 & bcc debs)
    * ACPI ASL compiler (iasl)
    * ocaml and ocaml-findlib-devel

    * Binary rpms of 64 bit cross complier, iasl and yajl
    * can be downloaded from code.xenserver.org

Additional package, which includes x86_64 cross complier, iasl, and yajl-devel
can be installed in the following order.

    * iasl-20090123-1.i386.rpm

    * yajl-1.0.12-1.i686.rpm  yajl-devel-1.0.12-1.i686.rpm

Follow these steps to build an RPM.

1. Clone the xen-4.5 repository to /some/path/xen-4.5/
2. Clone xen-4.5 patch queue repository to /some/path/xen-4.5/.git/patches/
3. cd /some/path/xen-4.5 and then do a `guilt push -a` to apply the patches
4. Git archive to obtain xen-4.5.0.tar.bz2 (TODO: gullv-ize Xen)
5. Clone the ipxe git repository to your local machine (TODO: gullv-ize ipxe)
6. Run `make source-archive` to obtain a ipxe.tar.gz file(TODO: gullv-ize ipxe)
7. Move xen-4.5.0.tar.bz2 and ipxe.tar.gz to /usr/src/redhat/SOURCES/
8. Run `rpmbuild -ba xen.spec --target x86_64` to build the RPMs
9. Install into XenServer using
   `rpm -ivh /usr/src/redhat/RPMs/x86_64/xen-*.rpm`
