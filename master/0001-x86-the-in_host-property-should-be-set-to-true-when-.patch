From c33c7916a4fc6e66d8097e207aec7d7d6f3ede2a Mon Sep 17 00:00:00 2001
From: Mihai DONTU <mdontu@bitdefender.com>
Date: Wed, 3 May 2017 17:05:46 +0300
Subject: [PATCH] x86: the in_host property should be set to true when the vCPU
 is first created
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This patch addresses a crash triggered by the NMI watchdog who notices
that upon resuming a VM that is making use of less vCPU-s than configured and
that is currently being introspected, the CPU gets caught in the following
loop in vmx_start_reexecute_instruction():

  while ( !a->arch.in_host )
      cpu_relax();

The CPU gets stuck when testing that property for a newly created vCPU that
has never entered the guest (it gets set to true only on guest exit).

The 'in_host' vCPU property was introduced by the patch:

  xen: Generic instruction re-execution mechanism for execute faults

While at it, I replaced '1' and '0' with 'true' and 'false', as in_host
is defined as bool.

Signed-off-by: Mihai Don»õu <mdontu@bitdefender.com>
diff --git a/xen/arch/x86/domain.c b/xen/arch/x86/domain.c
index da59efa..c8b1933 100644
--- a/xen/arch/x86/domain.c
+++ b/xen/arch/x86/domain.c
@@ -408,6 +408,7 @@ int vcpu_initialise(struct vcpu *v)
     int rc;
 
     v->arch.flags = TF_kernel_mode;
+    v->arch.in_host = 1;
 
     rc = mapcache_vcpu_init(v);
     if ( rc )
