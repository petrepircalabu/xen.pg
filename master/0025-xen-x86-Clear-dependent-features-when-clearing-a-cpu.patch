From cc0da38235fec569d3f3fce077851a5783c1212c Mon Sep 17 00:00:00 2001
From: Andrew Cooper <andrew.cooper3@citrix.com>
Date: Wed, 18 Nov 2015 12:51:20 +0000
Subject: [PATCH 25/39] xen/x86: Clear dependent features when clearing a cpu
 cap

When clearing a cpu cap, clear all dependent features.  This avoids having a
featureset with intermediate features disabled, but leaf features enabled.

Signed-off-by: Andrew Cooper <andrew.cooper3@citrix.com>
diff --git a/xen/arch/x86/cpu/common.c b/xen/arch/x86/cpu/common.c
index b48ce58..ba42ac0 100644
--- a/xen/arch/x86/cpu/common.c
+++ b/xen/arch/x86/cpu/common.c
@@ -49,8 +49,24 @@ static unsigned int __cpuinitdata cleared_caps[NCAPINTS];
 
 void __init setup_clear_cpu_cap(unsigned int cap)
 {
+	const struct tagged_featureset *dfs;
+	unsigned int i;
+
+	if ( test_bit(cap, cleared_caps) )
+		return;
+
 	__clear_bit(cap, boot_cpu_data.x86_capability);
 	__set_bit(cap, cleared_caps);
+
+	dfs = lookup_deep_deps(cap);
+
+	if ( !dfs )
+		return;
+
+	for ( i = 0; i < ARRAY_SIZE(dfs->fs); ++i ) {
+		cleared_caps[i] |= dfs->fs[i];
+		boot_cpu_data.x86_capability[i] &= ~dfs->fs[i];
+	}
 }
 
 static void default_init(struct cpuinfo_x86 * c)
