The technical debt has accrued so much that there are now binary
incompatibilites with Xen-4.2, which lead to triple faults in windows
guests running older PV drivers.

The "legacy" drivers make the HVMOP_set_driver_version hypercall which
has been included for donkey's years as a NOOP.  Finally now we need to
use it to enable legacy quirks mode.

The "newstyle" Tampa drivers for Vista and newer do not make this
hypercall, but also do not use the old hacks we have in place and use
the correct upstream ABI.

diff --git a/xen/arch/x86/hvm/hvm.c b/xen/arch/x86/hvm/hvm.c
index 2f28e72..ab75b40 100644
--- a/xen/arch/x86/hvm/hvm.c
+++ b/xen/arch/x86/hvm/hvm.c
@@ -6100,6 +6100,13 @@ long do_hvm_op(unsigned long op, XEN_GUEST_HANDLE_PARAM(void) arg)
         break;
     }
 
+    case HVMOP_set_driver_version:
+        /* The tampa "newstyle" drivers do not make this hypercall.  All
+         * older drivers do make it. */
+        curr_d->arch.hvm_domain._win_legacy_quirks = 1;
+        gdprintk(XENLOG_INFO, "Legacy windows driver quirks enabled. (HVMOP_set_driver_version)\n");
+        break;
+
     default:
     {
         gdprintk(XENLOG_DEBUG, "Bad HVM op %ld.\n", op);
diff --git a/xen/include/asm-x86/hvm/domain.h b/xen/include/asm-x86/hvm/domain.h
index 2757c7f..c9735f1 100644
--- a/xen/include/asm-x86/hvm/domain.h
+++ b/xen/include/asm-x86/hvm/domain.h
@@ -146,6 +146,9 @@ struct hvm_domain {
         struct vmx_domain vmx;
         struct svm_domain svm;
     };
+
+    /* Do we need to enable legacy windows driver quirks for this domain? */
+    bool_t                 _win_legacy_quirks;
 };
 
 #define hap_enabled(d)  ((d)->arch.hvm_domain.hap_enabled)
diff --git a/xen/include/public/hvm/hvm_op.h b/xen/include/public/hvm/hvm_op.h
index eeb0a60..955a94e 100644
--- a/xen/include/public/hvm/hvm_op.h
+++ b/xen/include/public/hvm/hvm_op.h
@@ -369,6 +369,13 @@ DEFINE_XEN_GUEST_HANDLE(xen_hvm_set_ioreq_server_state_t);
 
 #endif /* defined(__XEN__) || defined(__XEN_TOOLS__) */
 
+#define HVMOP_set_driver_version 0x103
+struct xen_hvm_set_driver_version {
+    uint32_t build;
+};
+typedef struct xen_hvm_set_driver_version xen_hvm_set_driver_version_t;
+DEFINE_XEN_GUEST_HANDLE(xen_hvm_set_driver_version_t);
+
 #endif /* __XEN_PUBLIC_HVM_HVM_OP_H__ */
 
 /*
