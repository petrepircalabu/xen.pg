diff --git a/xen/arch/x86/hvm/hvm.c b/xen/arch/x86/hvm/hvm.c
index d3cabf4..4803426 100644
--- a/xen/arch/x86/hvm/hvm.c
+++ b/xen/arch/x86/hvm/hvm.c
@@ -3292,31 +3292,31 @@ int hvm_set_cr3(unsigned long value)
 int hvm_set_cr4(unsigned long value)
 {
     struct vcpu *v = current;
-    unsigned long old_cr;
+    unsigned long old_cr = v->arch.hvm_vcpu.guest_cr[4];
 
-    if ( value & hvm_cr4_guest_reserved_bits(v, 0) )
+    unsigned long rsvd_bits = hvm_cr4_guest_reserved_bits(v, 0);
+
+    if ( value & rsvd_bits )
     {
-        HVM_DBG_LOG(DBG_LEVEL_1,
-                    "Guest attempts to set reserved bit in CR4: %lx",
-                    value);
+        printk(XENLOG_G_ERR "%pv attemping to set reserved cr4 bits: "
+               "old %016lx, new %016lx, rsvd %016lx\n",
+               v, old_cr, value, rsvd_bits);
         goto gpf;
     }
 
     if ( !(value & X86_CR4_PAE) && hvm_long_mode_enabled(v) )
     {
-        HVM_DBG_LOG(DBG_LEVEL_1, "Guest cleared CR4.PAE while "
-                    "EFER.LMA is set");
+        printk(XENLOG_G_ERR "%pv Guest cleared CR4.PAE while "
+               "EFER.LMA is set\n", v);
         goto gpf;
     }
 
-    old_cr = v->arch.hvm_vcpu.guest_cr[4];
-
     if ( (value & X86_CR4_PCIDE) && !(old_cr & X86_CR4_PCIDE) &&
          (!hvm_long_mode_enabled(v) ||
           (v->arch.hvm_vcpu.guest_cr[3] & 0xfff)) )
     {
-        HVM_DBG_LOG(DBG_LEVEL_1, "Guest attempts to change CR4.PCIDE from "
-                    "0 to 1 while either EFER.LMA=0 or CR3[11:0]!=000H");
+        printk(XENLOG_G_ERR "%pv Guest attempts to change CR4.PCIDE from "
+               "0 to 1 while either EFER.LMA=0 or CR3[11:0]!=000H\n", v);
         goto gpf;
     }
 
