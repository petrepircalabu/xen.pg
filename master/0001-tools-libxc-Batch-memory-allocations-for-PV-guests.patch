From a21576faa5efeee4b7475dc8ff575145e2c6e396 Mon Sep 17 00:00:00 2001
From: Ross Lagerwall <ross.lagerwall@citrix.com>
Date: Thu, 4 Jun 2015 10:25:07 +0100
Subject: [PATCH] tools/libxc: Batch memory allocations for PV guests

The current code for allocating memory for PV guests batches the
hypercalls to allocate memory by allocating 1024*1024 extents of order 0
at a time. To make this faster, first try allocating single extents of
order 9 (2 MiB) before falling back to the order 0 allocating if the
order 9 allocation fails.

On my test machine this reduced the time to start a 128 GiB PV guest by
about 60 seconds.

Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
---
 tools/libxc/xc_dom_x86.c | 23 +++++++++++++++++++++--
 1 file changed, 21 insertions(+), 2 deletions(-)

diff --git a/tools/libxc/xc_dom_x86.c b/tools/libxc/xc_dom_x86.c
index bf06fe4..4827216 100644
--- a/tools/libxc/xc_dom_x86.c
+++ b/tools/libxc/xc_dom_x86.c
@@ -812,8 +812,27 @@ int arch_setup_meminit(struct xc_dom_image *dom)
         for ( pfn = 0; pfn < dom->total_pages; pfn++ )
             dom->p2m_host[pfn] = pfn;
         
-        /* allocate guest memory */
-        for ( i = rc = allocsz = 0;
+        /* allocate guest memory in 2MiB extents */
+        for ( i = rc = 0; i < dom->total_pages; )
+        {
+            if ( (dom->total_pages - i) < SUPERPAGE_NR_PFNS )
+                break;
+
+            mfn = dom->p2m_host[i];
+            rc = xc_domain_populate_physmap(
+                dom->xch, dom->guest_domid, 1,
+                SUPERPAGE_PFN_SHIFT, 0, &mfn);
+            if ( rc != 1 )
+                break;
+
+            /* Expand the returned mfn into the p2m array */
+            for ( j = 0; j < SUPERPAGE_NR_PFNS; j++, i++ ) {
+                dom->p2m_host[i] = mfn + j;
+            }
+        }
+
+        /* allocate remaining guest memory in single page extents */
+        for ( rc = allocsz = 0;
               (i < dom->total_pages) && !rc;
               i += allocsz )
         {
-- 
2.1.0

