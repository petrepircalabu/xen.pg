CA-138289: monitor blktap3 VBD rings

There's no blkback in blktap3 so we have to rely on tapdisk providing Xenbus
ring information through a file in /dev/shm. Kicking the back-end is not yet
supported.

Signed-off-by: Thanos Makatos <thanos.makatos@citrix.com>

diff --git a/tools/misc/xen-ringwatch b/tools/misc/xen-ringwatch
index 60e60ed..e3d7236 100644
--- a/tools/misc/xen-ringwatch
+++ b/tools/misc/xen-ringwatch
@@ -56,6 +56,7 @@ class XenBackend(object):
     """A Xen I/O backend."""
 
     SYSFS_BASEDIR = "/sys/bus/xen-backend/devices"
+    SHM_BASEDIR = "/dev/shm"
 
     def __init__(self, rd, devid):
         self.rd    = int(rd)
@@ -90,6 +91,8 @@ class XenBackend(object):
     @classmethod
     def find(cls):
         paths = glob.glob("%s/%s" % (cls.SYSFS_BASEDIR,
+                                     cls._name_glob)) + \
+                glob.glob("%s/%s" % (cls.SHM_BASEDIR,
                                      cls._name_glob))
         for path in paths:
             name = os.path.basename(path)
@@ -174,6 +177,28 @@ class VBD(XenBackend):
 
 VBD.register()
 
+class VBD3(XenBackend):
+    """blktap3 backends."""
+
+    XEN_BACKEND_NAME = 'vbd3'
+
+    _name_pattern = Pattern("vbd3-(\d+)-(\d+)")
+    _name_glob    = "vbd3-*-*"
+
+    def path(self):
+        return os.path.join("/dev/shm", self.name())
+
+    def name(self):
+        return "vbd3-%d-%d" % (self.rd, self.devid)
+
+    class Ring(XenBackend.Ring):
+        _name_glob = "io_ring"
+
+        def write(self, cmd):
+            pass
+
+VBD3.register()
+
 class VIF(XenBackend):
     """Xen netif backends."""
 
