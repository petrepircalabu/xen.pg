From c5fb44c1ab99dee9f15cb7e0341db9011f4d06c2 Mon Sep 17 00:00:00 2001
From: Mihai DONTU <mdontu@bitdefender.com>
Date: Sat, 9 Apr 2016 17:15:04 +0300
Subject: [PATCH 3/4] xen: Filter out MSR write events when introspection
 enabled

This patch only allows introspection-related MSR write events to
be sent when opt_introspection_ext != 0, improving performance.

Signed-off-by: Razvan Cojocaru <rcojocaru@bitdefender.com>
diff --git a/xen/arch/x86/hvm/hvm.c b/xen/arch/x86/hvm/hvm.c
index c7a59d8..9429654 100644
--- a/xen/arch/x86/hvm/hvm.c
+++ b/xen/arch/x86/hvm/hvm.c
@@ -4837,6 +4837,17 @@ int hvm_msr_read_intercept(unsigned int msr, uint64_t *msr_content)
     goto out;
 }
 
+static bool_t is_introspection_msr(unsigned int msr)
+{
+    unsigned int i;
+
+    for ( i = 0; i < vmx_introspection_force_enabled_msrs_size; i++ )
+        if ( msr == vmx_introspection_force_enabled_msrs[i] )
+            return 1;
+
+    return 0;
+}
+
 int hvm_msr_write_intercept(unsigned int msr, uint64_t msr_content,
                             bool_t may_defer)
 {
@@ -4854,15 +4865,18 @@ int hvm_msr_write_intercept(unsigned int msr, uint64_t msr_content,
 
     if ( may_defer && unlikely(currad->monitor.mov_to_msr_enabled) )
     {
-        ASSERT(v->arch.vm_event);
+        if ( !opt_introspection_extn || is_introspection_msr(msr) )
+        {
+            ASSERT(v->arch.vm_event);
 
-        /* The actual write will occur in hvm_do_resume() (if permitted). */
-        v->arch.vm_event->write_data.do_write.msr = 1;
-        v->arch.vm_event->write_data.msr = msr;
-        v->arch.vm_event->write_data.value = msr_content;
+            /* The actual write will occur in hvm_do_resume() (if permitted). */
+            v->arch.vm_event->write_data.do_write.msr = 1;
+            v->arch.vm_event->write_data.msr = msr;
+            v->arch.vm_event->write_data.value = msr_content;
 
-        hvm_event_msr(msr, msr_content);
-        return X86EMUL_OKAY;
+            hvm_event_msr(msr, msr_content);
+            return X86EMUL_OKAY;
+        }
     }
 
     switch ( msr )
