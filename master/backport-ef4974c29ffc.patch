From ef4974c29ffc35b7e712af19e802e335ae8d80b4 Mon Sep 17 00:00:00 2001
From: Jan Beulich <jbeulich@suse.com>
Date: Wed, 21 Oct 2015 10:53:35 +0200
Subject: [PATCH] x86/HVM: prefix both instances of enable_intr_window()

... to tell them apart by their names even without further context.

Signed-off-by: Jan Beulich <jbeulich@suse.com>
Reviewed-by: Andrew Cooper <andrew.cooper3@citrix.com>
Reviewed-by: Aravind Gopalakrishnan<Aravind.Gopalakrishnan@amd.com>
Acked-by: Kevin Tian <kevin.tian@intel.com>
---
 xen/arch/x86/hvm/svm/intr.c |    6 +++---
 xen/arch/x86/hvm/vmx/intr.c |   18 +++++++++---------
 2 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/xen/arch/x86/hvm/svm/intr.c b/xen/arch/x86/hvm/svm/intr.c
index 1d97c1b..bd94731 100644
--- a/xen/arch/x86/hvm/svm/intr.c
+++ b/xen/arch/x86/hvm/svm/intr.c
@@ -75,7 +75,7 @@ static void svm_inject_extint(struct vcpu *v, int vector)
     vmcb->eventinj = event;
 }
 
-static void enable_intr_window(struct vcpu *v, struct hvm_intack intack)
+static void svm_enable_intr_window(struct vcpu *v, struct hvm_intack intack)
 {
     struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
     uint32_t general1_intercepts = vmcb_get_general1_intercepts(vmcb);
@@ -195,7 +195,7 @@ void svm_intr_assist(void)
          */
         if ( unlikely(vmcb->eventinj.fields.v) || intblk )
         {
-            enable_intr_window(v, intack);
+            svm_enable_intr_window(v, intack);
             return;
         }
 
@@ -216,7 +216,7 @@ void svm_intr_assist(void)
     /* Is there another IRQ to queue up behind this one? */
     intack = hvm_vcpu_has_pending_irq(v);
     if ( unlikely(intack.source != hvm_intsrc_none) )
-        enable_intr_window(v, intack);
+        svm_enable_intr_window(v, intack);
 }
 
 /*
diff --git a/xen/arch/x86/hvm/vmx/intr.c b/xen/arch/x86/hvm/vmx/intr.c
index 4189f89..56c40b1 100644
--- a/xen/arch/x86/hvm/vmx/intr.c
+++ b/xen/arch/x86/hvm/vmx/intr.c
@@ -67,7 +67,7 @@
  * the STI- and MOV-SS-blocking interruptibility-state flags.
  */
 
-static void enable_intr_window(struct vcpu *v, struct hvm_intack intack)
+static void vmx_enable_intr_window(struct vcpu *v, struct hvm_intack intack)
 {
     u32 ctl = CPU_BASED_VIRTUAL_INTR_PENDING;
 
@@ -182,7 +182,7 @@ static int nvmx_intr_intercept(struct vcpu *v, struct hvm_intack intack)
 
     if ( nvmx_intr_blocked(v) != hvm_intblk_none )
     {
-        enable_intr_window(v, intack);
+        vmx_enable_intr_window(v, intack);
         return 1;
     }
 
@@ -206,10 +206,10 @@ static int nvmx_intr_intercept(struct vcpu *v, struct hvm_intack intack)
 
                 intack = hvm_vcpu_has_pending_irq(v);
                 if ( unlikely(intack.source != hvm_intsrc_none) )
-                    enable_intr_window(v, intack);
+                    vmx_enable_intr_window(v, intack);
             }
             else
-                enable_intr_window(v, intack);
+                vmx_enable_intr_window(v, intack);
 
             return 1;
         }
@@ -257,7 +257,7 @@ void vmx_intr_assist(void)
                   intack.source == hvm_intsrc_vector ||
                   intack.source == hvm_intsrc_nmi) )
             {
-                enable_intr_window(v, intack);
+                vmx_enable_intr_window(v, intack);
                 goto out;
             }
 
@@ -267,7 +267,7 @@ void vmx_intr_assist(void)
                 if ( (intack.source == hvm_intsrc_pic) ||
                      (intack.source == hvm_intsrc_nmi) ||
                      (intack.source == hvm_intsrc_mce) )
-                    enable_intr_window(v, intack);
+                    vmx_enable_intr_window(v, intack);
 
                 goto out;
             }
@@ -280,7 +280,7 @@ void vmx_intr_assist(void)
         }
         else if ( intblk != hvm_intblk_none )
         {
-            enable_intr_window(v, intack);
+            vmx_enable_intr_window(v, intack);
             goto out;
         }
         else
@@ -288,7 +288,7 @@ void vmx_intr_assist(void)
             __vmread(VM_ENTRY_INTR_INFO, &intr_info);
             if ( intr_info & INTR_INFO_VALID_MASK )
             {
-                enable_intr_window(v, intack);
+                vmx_enable_intr_window(v, intack);
                 goto out;
             }
         }
@@ -350,7 +350,7 @@ void vmx_intr_assist(void)
          intack.source == hvm_intsrc_vector )
     {
         if ( unlikely(intack.source != hvm_intsrc_none) )
-            enable_intr_window(v, intack);
+            vmx_enable_intr_window(v, intack);
     }
 
  out:
-- 
1.7.10.4

