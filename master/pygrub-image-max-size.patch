diff --git a/tools/pygrub/src/pygrub b/tools/pygrub/src/pygrub
index 8a9734a..c681880 100644
--- a/tools/pygrub/src/pygrub
+++ b/tools/pygrub/src/pygrub
@@ -18,6 +18,7 @@ import copy
 import logging
 import platform
 import xen.lowlevel.xc
+import xen.lowlevel.xs
 
 import curses, _curses, curses.wrapper, curses.textpad, curses.ascii
 import getopt
@@ -732,6 +733,18 @@ if __name__ == "__main__":
     def usage():
         print >> sys.stderr, "Usage: %s [-q|--quiet] [-i|--interactive] [-l|--list-entries] [-n|--not-really] [--output=] [--kernel=] [--ramdisk=] [--args=] [--entry=] [--output-directory=] [--output-format=sxp|simple|simple0] [--offset=] <image>" %(sys.argv[0],)
 
+    def get_image_max_size(file_type):
+        xs = xen.lowlevel.xs.xs()
+
+        try:
+            max_size = int(xs.read("", "/mh/limits/pv-%s-max-size" % (file_type)))
+        except:
+            max_size = 1024**3
+
+        xs.close()
+
+        return max_size
+
     def copy_from_image(fs, file_to_read, file_type, output_directory,
                         not_really):
         if not_really:
@@ -746,6 +759,8 @@ if __name__ == "__main__":
             sys.exit("Error opening %s in guest" % file_to_read)
         (tfd, ret) = tempfile.mkstemp(prefix="boot_"+file_type+".",
                                       dir=output_directory)
+
+        max_size = get_image_max_size(file_type)
         dataoff = 0
         while True:
             data = datafile.read(FS_READ_MAX, dataoff)
@@ -753,6 +768,8 @@ if __name__ == "__main__":
                 os.close(tfd)
                 del datafile
                 return ret
+            if dataoff + len(data) > max_size:
+                raise RuntimeError, "%s image is too large" % (file_type)
             try:
                 os.write(tfd, data)
             except Exception, e:
